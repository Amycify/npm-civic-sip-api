{"version":3,"sources":["../../lib/jwt.js"],"names":["jwtjs","require","uuidV4","timestamp","sjcl","stringify","ALGO","exports","createToken","issuer","audience","subject","expiresIn","payload","sechex","now","until","add","content","jti","iat","exp","iss","aud","sub","data","signer","TokenSigner","sign","verify","token","pubhex","verifier","TokenVerifier","decode","decodeToken","createCivicExt","body","clientAccessSecret","bodyStr","hmac","misc","hash","sha256","codec","base64","fromBits","encrypt"],"mappings":"AAAA;;AAEA,IAAMA,QAAQC,QAAQ,QAAR,CAAd;AACA,IAAMC,SAASD,QAAQ,SAAR,CAAf;AACA,IAAME,YAAYF,QAAQ,gBAAR,CAAlB;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,YAAYJ,QAAQ,uBAAR,CAAlB;;AAEA,IAAMK,OAAO,QAAb;;AAEAC,QAAQC,WAAR,GAAsB,UAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwDC,MAAxD,EAAgE;;AAEpF,MAAMC,MAAMZ,UAAUY,GAAV,EAAZ;AACA,MAAMC,QAAQb,UAAUc,GAAV,CAAcF,GAAd,EAAmBH,SAAnB,CAAd;;AAEA,MAAMM,UAAU;AACdC,SAAKjB,QADS;AAEdkB,SAAKL,GAFS;AAGdM,SAAKL,KAHS;AAIdM,SAAKb,MAJS;AAKdc,SAAKb,QALS;AAMdc,SAAKb,OANS;AAOdc,UAAMZ;AAPQ,GAAhB;;AAUA,MAAMa,SAAS,IAAI1B,MAAM2B,WAAV,CAAsBrB,IAAtB,EAA4BQ,MAA5B,CAAf;;AAEA,SAAOY,OAAOE,IAAP,CAAYV,OAAZ,CAAP;AAED,CAnBD;;AAqBAX,QAAQsB,MAAR,GAAiB,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACvC,MAAMC,WAAW,IAAIhC,MAAMiC,aAAV,CAAwB3B,IAAxB,EAA8ByB,MAA9B,CAAjB;AACA,SAAOC,SAASH,MAAT,CAAgBC,KAAhB,CAAP;AACD,CAHD;;AAKAvB,QAAQ2B,MAAR,GAAiB,UAASJ,KAAT,EAAgB;AAC/B,SAAO9B,MAAMmC,WAAN,CAAkBL,KAAlB,CAAP;AACD,CAFD;;AAIAvB,QAAQ6B,cAAR,GAAyB,UAASC,IAAT,EAAeC,kBAAf,EAAmC;;AAE1D,MAAMC,UAAUlC,UAAUgC,IAAV,CAAhB;AACA,MAAMG,OAAO,IAAIpC,KAAKqC,IAAL,CAAUD,IAAd,CAAmBF,kBAAnB,EAAuClC,KAAKsC,IAAL,CAAUC,MAAjD,CAAb;AACA,SAAOvC,KAAKwC,KAAL,CAAWC,MAAX,CAAkBC,QAAlB,CAA2BN,KAAKO,OAAL,CAAaR,OAAb,CAA3B,CAAP;AAED,CAND","file":"jwt.js","sourcesContent":["\"use strict\";\n\nconst jwtjs = require('jwt-js');\nconst uuidV4 = require('uuid/v4');\nconst timestamp = require('unix-timestamp');\nconst sjcl = require('sjcl');\nconst stringify = require('json-stable-stringify');\n\nconst ALGO = 'ES256k';\n\nexports.createToken = function(issuer, audience, subject, expiresIn, payload, sechex) {\n\n  const now = timestamp.now();\n  const until = timestamp.add(now, expiresIn);\n\n  const content = {\n    jti: uuidV4(),\n    iat: now,\n    exp: until,\n    iss: issuer,\n    aud: audience,\n    sub: subject,\n    data: payload\n  }\n\n  const signer = new jwtjs.TokenSigner(ALGO, sechex);\n\n  return signer.sign(content);\n\n}\n\nexports.verify = function(token, pubhex) {\n  const verifier = new jwtjs.TokenVerifier(ALGO, pubhex);\n  return verifier.verify(token);\n}\n\nexports.decode = function(token) {\n  return jwtjs.decodeToken(token);\n}\n\nexports.createCivicExt = function(body, clientAccessSecret) {\n\n  const bodyStr = stringify(body);\n  const hmac = new sjcl.misc.hmac(clientAccessSecret, sjcl.hash.sha256);\n  return sjcl.codec.base64.fromBits(hmac.encrypt(bodyStr));\n\n}"]}